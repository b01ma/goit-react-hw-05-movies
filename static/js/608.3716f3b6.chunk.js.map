{"version":3,"file":"static/js/608.3716f3b6.chunk.js","mappings":"kPACA,EAA4B,0BAA5B,EAAkE,0BAAlE,EAAoG,sBAApG,EAAuI,2B,SCCvI,ECGe,WACb,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAP,eAEMC,GAASC,EAAAA,EAAAA,UACb,kBAAMC,OAAOC,aAAP,OAAuBJ,MAC7B,CAACA,IAEKK,EAAsBJ,EAAtBI,YAAaC,EAASL,EAATK,KAqBrB,OAnBAC,EAAAA,EAAAA,YAAU,WACJF,IACFG,EAAAA,EAAAA,IAAmBH,EAAaC,GAC7BG,MAAK,SAAAC,GAEFZ,EADEQ,EAAO,EACC,SAAAT,GAAM,wBAAQA,IAAR,OAAmBa,EAASC,KAAKC,WAEvCF,EAASC,KAAKC,YAG3BC,OAAM,SAAAC,GACLC,QAAQC,IAAI,SAAUF,EAAEG,YAEzBC,SAAQ,iBAIZ,CAACb,EAAaC,KAGf,iBAAKa,UAAWC,EAAhB,WACE,SAAC,KAAD,KACA,eAAID,UAAWC,EAAf,gBACGvB,QADH,IACGA,OADH,EACGA,EAAQwB,KAAI,SAAAC,GACX,OACE,2BACE,0BACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAA3B,UACE,gBACEL,UAAWC,EACXK,IAAG,UAAKC,EAAAA,GAAL,eAAwBJ,EAAMK,aACjCC,IAAI,gBAIV,0BACE,SAAC,KAAD,CAAMT,UAAWC,EAAgBG,GAAE,kBAAaD,EAAME,IAAtD,SACGF,EAAMO,qBAZJP,EAAME","sources":["webpack://goit-react-hw-05-movies/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/index.js","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Movies_container__+-Cnt\",\"movieList\":\"Movies_movieList__FD6N4\",\"image\":\"Movies_image__vvLaG\",\"movieTitle\":\"Movies_movieTitle__lz38M\"};","import Movies from './Movies';\n\nexport default Movies;\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { Outlet, Link, useSearchParams } from 'react-router-dom';\nimport { BASE_IMG_URL, searchMovieByQuery } from 'service/moviesAPI';\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams] = useSearchParams();\n\n  const params = useMemo(\n    () => Object.fromEntries([...searchParams]),\n    [searchParams]\n  );\n  const { searchQuery, page } = params;\n\n  useEffect(() => {\n    if (searchQuery) {\n      searchMovieByQuery(searchQuery, page)\n        .then(response => {\n          if (page > 1) {\n            setMovies(movies => [...movies, ...response.data.results]);\n          } else {\n            setMovies(response.data.results);\n          }\n        })\n        .catch(e => {\n          console.log('error:', e.message);\n        })\n        .finally(() => {\n          // setIsLoading(false);\n        });\n    }\n  }, [searchQuery, page]);\n\n  return (\n    <div className={css.container}>\n      <Outlet />\n      <ul className={css.movieList}>\n        {movies?.map(movie => {\n          return (\n            <li key={movie.id}>\n              <div>\n                <Link to={`/movies/${movie.id}`}>\n                  <img\n                    className={css.image}\n                    src={`${BASE_IMG_URL}w200${movie.poster_path}`}\n                    alt=\"Poster\"\n                  />\n                </Link>\n              </div>\n              <div>\n                <Link className={css.movieTitle} to={`/movies/${movie.id}`}>\n                  {movie.original_title}\n                </Link>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["useState","movies","setMovies","useSearchParams","searchParams","params","useMemo","Object","fromEntries","searchQuery","page","useEffect","searchMovieByQuery","then","response","data","results","catch","e","console","log","message","finally","className","css","map","movie","to","id","src","BASE_IMG_URL","poster_path","alt","original_title"],"sourceRoot":""}